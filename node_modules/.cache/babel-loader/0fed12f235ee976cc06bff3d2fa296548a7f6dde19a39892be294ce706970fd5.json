{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, Transition as _Transition, withCtx as _withCtx, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createVNode(_component_router_view, null, {\n    default: _withCtx(({\n      Component\n    }) => [_createVNode(_Transition, {\n      name: $options.transitionName\n    }, {\n      default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent(Component)))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"name\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","_component_router_view","Component","_Transition","name","$options","transitionName","_createBlock","_resolveDynamicComponent"],"sources":["E:\\HomeWork\\百度飞浆\\medical_0.1.0\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <Navbar />\n    <router-view v-slot=\"{ Component }\">\n      <transition :name=\"transitionName\">\n        <component :is=\"Component\" />\n      </transition>\n    </router-view>\n  </div>\n\n</template>\n\n<script>\nimport Navbar from './components/Navbar/Navbar_copy.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    Navbar,\n},\n\n\ncomputed: {\n    transitionName() {\n      const currentRouteName = this.$route.name;\n      const previousRouteName = this.$route.meta.previousRouteName;\n      if (previousRouteName === 'Home' && currentRouteName === 'About') {\n        return 'slide-up';\n      } else if (\n        (previousRouteName === 'Home' || previousRouteName === 'About') &&\n        (currentRouteName === 'Import' || currentRouteName === 'Display' || currentRouteName === 'Analysis')\n      ) {\n        return 'slide-left';\n      } else if (\n        (previousRouteName === 'Import' || previousRouteName === 'Display' || previousRouteName === 'Analysis') &&\n        (currentRouteName === 'Home' || currentRouteName === 'About')\n      ) {\n        return 'slide-right';\n      } else {\n        return '';\n      }\n    }\n  },\n  beforeRouteUpdate(to, from, next) {\n    to.meta.previousRouteName = from.name;\n    next();\n  }\n\n}\n</script>\n\n<style>\n\n/* 定义滚动切换过渡效果 */\n.slide-up-enter-active,\n.slide-up-leave-active,\n.slide-left-enter-active,\n.slide-left-leave-active,\n.slide-right-enter-active,\n.slide-right-leave-active {\n  transition: all 0.3s ease;\n}\n\n.slide-up-enter,\n.slide-up-leave-to {\n  transform: translateY(-100%);\n}\n\n.slide-left-enter,\n.slide-left-leave-to {\n  transform: translateX(-100%);\n}\n\n.slide-right-enter,\n.slide-right-leave-to {\n  transform: translateX(100%);\n}\n\n\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;;uBAAbC,mBAAA,CAOM,OAPNC,UAOM,GANJC,YAAA,CAAUC,iBAAA,GACVD,YAAA,CAIcE,sBAAA;sBAHZ,CAEa;MAHQC;IAAS,OAC9BH,YAAA,CAEaI,WAAA;MAFAC,IAAI,EAAEC,QAAA,CAAAC;IAAc;wBAC/B,MAA6B,E,cAA7BC,YAAA,CAA6BC,wBAAA,CAAbN,SAAS,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}