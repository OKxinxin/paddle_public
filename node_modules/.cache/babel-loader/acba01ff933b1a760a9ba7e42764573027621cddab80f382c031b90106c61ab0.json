{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, Transition as _Transition, withCtx as _withCtx, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createVNode(_component_router_view, null, {\n    default: _withCtx(({\n      Component\n    }) => [_createVNode(_Transition, {\n      name: $data.transitionName\n    }, {\n      default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent(Component)))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"name\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","_component_router_view","Component","_Transition","name","$data","transitionName","_createBlock","_resolveDynamicComponent"],"sources":["E:\\HomeWork\\百度飞浆\\medical_0.1.0\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <Navbar />\n    <router-view v-slot=\"{ Component }\">\n      <transition :name=\"transitionName\">\n        <component :is=\"Component\" />\n      </transition>\n    </router-view>\n  </div>\n\n</template>\n\n<script>\nimport Navbar from './components/Navbar/Navbar_copy.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    Navbar,\n},\n\ndata() {\n    return {\n      transitionName: null,\n    };\n  },\n  watch: {\n    \"$route\": function(to, from) {\n      this.setTransitionName(to, from);\n    },\n  },\n  methods: {\n    setTransitionName(to, from) {\n      const fromName = from.name;\n      const toName = to.name;\n      let transitionName = \"\";\n      if (toName === 'Home' && fromName === 'About') {\n        transitionName = 'slide-down';\n      } else if (toName === 'About' && fromName === 'Home') {\n        transitionName = 'slide-up';\n      } else if (\n        ['Import', 'Display', 'Analysis'].includes(toName) &&\n        ['Home', 'About'].includes(fromName)\n      ) {\n        transitionName = 'slide-left';\n      } else if (\n        ['Home', 'About'].includes(toName) &&\n        ['Import', 'Display', 'Analysis'].includes(fromName)\n      ) {\n        transitionName = 'slide-right';\n      } else if (\n        ['Import'].includes(toName) &&\n        ['Display', 'Analysis'].includes(fromName)\n      ) {\n        transitionName = 'slide-right';\n      } else if (\n        ['Display', 'Analysis'].includes(toName) &&\n        ['Import'].includes(fromName)\n      ) {\n        transitionName = 'slide-left';\n      } else if (\n        ['Display'].includes(toName) &&\n        ['Analysis'].includes(fromName)\n      ) {\n        transitionName = 'slide-right';\n      } else if (\n        ['Analysis'].includes(toName) &&\n        ['Display'].includes(fromName)\n      ) {\n        transitionName = 'slide-left';\n    }\n    this.transitionName = transitionName;\n  },\n},\n};\n</script>\n\n<style scoped>\n@import './router/index.css';\n\n#app {\n  height: 100%;\n}\n\n</style>\n\n\n"],"mappings":";;;EACOA,EAAE,EAAC;AAAK;;;;uBAAbC,mBAAA,CAOM,OAPNC,UAOM,GANJC,YAAA,CAAUC,iBAAA,GACVD,YAAA,CAIcE,sBAAA;sBAHZ,CAEa;MAHQC;IAAS,OAC9BH,YAAA,CAEaI,WAAA;MAFAC,IAAI,EAAEC,KAAA,CAAAC;IAAc;wBAC/B,MAA6B,E,cAA7BC,YAAA,CAA6BC,wBAAA,CAAbN,SAAS,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}