{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fae5bece\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Home\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    ref: \"scrollContainer\",\n    onWheel: _cache[0] || (_cache[0] = (...args) => _ctx.onScroll && _ctx.onScroll(...args)),\n    class: \"page\",\n    style: {\n      \"color\": \"aqua\",\n      \"width\": \"100%\",\n      \"min-height\": \"120vh\",\n      \"background-color\": \"aqua\"\n    }\n  }, [_createCommentVNode(\" 在这里编写组件的模板 \"), _hoisted_1], 544 /* HYDRATE_EVENTS, NEED_PATCH */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","ref","onWheel","_cache","args","_ctx","onScroll","class","style","_createCommentVNode","_hoisted_1"],"sources":["E:\\HomeWork\\百度飞浆\\medical_0.1.0\\src\\views\\Home.vue"],"sourcesContent":["<!-- 这是一个基本的Vue组件结构 -->\r\n<template>\r\n    <div ref=\"scrollContainer\" @wheel=\"onScroll\" class=\"page\" style=\"color: aqua;width: 100%;min-height: 120vh; background-color: aqua;\">\r\n    <!-- 在这里编写组件的模板 -->\r\n    <h1>Home</h1>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Home_vue',\r\n  components: {\r\n  },\r\n\r\n  mounted() {\r\n    // 初始化滚动位置\r\n    this.scrollPosition = 0;\r\n\r\n    // 监听鼠标滚轮事件\r\n    window.addEventListener('wheel', this.onWheel);\r\n  },\r\n  beforeUnmount() {\r\n    // 移除事件监听\r\n    window.removeEventListener('wheel', this.onWheel);\r\n  },\r\n  methods: {\r\n    onWheel(event) {\r\n      // 阻止默认滚动行为\r\n      event.preventDefault();\r\n\r\n      // 获取滚动容器\r\n      const scrollContainer = this.$refs.scrollContainer;\r\n\r\n      // 记录当前滚动位置\r\n      this.scrollPosition += event.deltaY;\r\n\r\n      // 判断是否滚动到了底部\r\n      if (this.scrollPosition >= scrollContainer.scrollHeight - scrollContainer.clientHeight) {\r\n        // 启用缓冲\r\n        this.enableBuffer();\r\n      }\r\n    },\r\n    enableBuffer() {\r\n      // 禁用鼠标滚轮事件\r\n      window.removeEventListener('wheel', this.onWheel);\r\n\r\n      // 缓冲一段时间\r\n      setTimeout(() => {\r\n        // 启用鼠标滚轮事件\r\n        window.addEventListener('wheel', this.onWheel);\r\n\r\n        // 判断滚动方向，如果是向下滚动，则跳转至另一个页面\r\n        if (this.scrollPosition >= this.$refs.scrollContainer.scrollHeight - this.$refs.scrollContainer.clientHeight) {\r\n          this.goToAnotherPage();\r\n        }\r\n      }, 500);\r\n    },\r\n    goToAnotherPage() {\r\n      // 在这里实现跳转逻辑\r\n      this.$router.push('/about');\r\n\r\n    }\r\n  }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* 在这里编写组件的样式 */\r\n\r\n\r\n</style>"],"mappings":";;gEAIIA,mBAAA,CAAa,YAAT,MAAI;;;uBAFRC,mBAAA,CAGI;IAHCC,GAAG,EAAC,iBAAiB;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,QAAA,IAAAD,IAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;IAAEG,KAAK,EAAC,MAAM;IAACC,KAA0E,EAA1E;MAAA;MAAA;MAAA;MAAA;IAAA;MAC1DC,mBAAA,gBAAmB,EACnBC,UAAa,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}