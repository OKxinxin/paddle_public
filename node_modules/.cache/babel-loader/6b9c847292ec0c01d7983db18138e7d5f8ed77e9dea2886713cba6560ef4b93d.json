{"ast":null,"code":"import Navbar from './components/Navbar/Navbar_copy.vue';\nexport default {\n  name: 'App',\n  components: {\n    Navbar\n  },\n  computed: {\n    transitionName() {\n      const currentRouteName = this.$route.name;\n      const previousRouteName = this.$route.meta.previousRouteName;\n      if (previousRouteName === 'Home' && currentRouteName === 'About') {\n        return 'slide-up';\n      } else if ((previousRouteName === 'Home' || previousRouteName === 'About') && (currentRouteName === 'Import' || currentRouteName === 'Display' || currentRouteName === 'Analysis')) {\n        return 'slide-left';\n      } else if ((previousRouteName === 'Import' || previousRouteName === 'Display' || previousRouteName === 'Analysis') && (currentRouteName === 'Home' || currentRouteName === 'About')) {\n        return 'slide-right';\n      } else {\n        return '';\n      }\n    }\n  },\n  beforeRouteUpdate(to, from, next) {\n    to.meta.previousRouteName = from.name;\n    next();\n  }\n};","map":{"version":3,"names":["Navbar","name","components","computed","transitionName","currentRouteName","$route","previousRouteName","meta","beforeRouteUpdate","to","from","next"],"sources":["E:\\HomeWork\\百度飞浆\\medical_0.1.0\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <Navbar />\n    <router-view v-slot=\"{ Component }\">\n      <transition :name=\"transitionName\">\n        <component :is=\"Component\" />\n      </transition>\n    </router-view>\n  </div>\n\n</template>\n\n<script>\nimport Navbar from './components/Navbar/Navbar_copy.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    Navbar,\n},\n\n\ncomputed: {\n    transitionName() {\n      const currentRouteName = this.$route.name;\n      const previousRouteName = this.$route.meta.previousRouteName;\n      if (previousRouteName === 'Home' && currentRouteName === 'About') {\n        return 'slide-up';\n      } else if (\n        (previousRouteName === 'Home' || previousRouteName === 'About') &&\n        (currentRouteName === 'Import' || currentRouteName === 'Display' || currentRouteName === 'Analysis')\n      ) {\n        return 'slide-left';\n      } else if (\n        (previousRouteName === 'Import' || previousRouteName === 'Display' || previousRouteName === 'Analysis') &&\n        (currentRouteName === 'Home' || currentRouteName === 'About')\n      ) {\n        return 'slide-right';\n      } else {\n        return '';\n      }\n    }\n  },\n  beforeRouteUpdate(to, from, next) {\n    to.meta.previousRouteName = from.name;\n    next();\n  }\n\n}\n</script>\n\n<style>\n\n/* 定义滚动切换过渡效果 */\n.slide-up-enter-active,\n.slide-up-leave-active,\n.slide-left-enter-active,\n.slide-left-leave-active,\n.slide-right-enter-active,\n.slide-right-leave-active {\n  transition: all 0.3s ease;\n}\n\n.slide-up-enter,\n.slide-up-leave-to {\n  transform: translateY(-100%);\n}\n\n.slide-left-enter,\n.slide-left-leave-to {\n  transform: translateX(-100%);\n}\n\n.slide-right-enter,\n.slide-right-leave-to {\n  transform: translateX(100%);\n}\n\n\n</style>\n"],"mappings":"AAaA,OAAOA,MAAK,MAAO,qCAAqC;AAExD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVF;EACJ,CAAC;EAGDG,QAAQ,EAAE;IACNC,cAAcA,CAAA,EAAG;MACf,MAAMC,gBAAe,GAAI,IAAI,CAACC,MAAM,CAACL,IAAI;MACzC,MAAMM,iBAAgB,GAAI,IAAI,CAACD,MAAM,CAACE,IAAI,CAACD,iBAAiB;MAC5D,IAAIA,iBAAgB,KAAM,MAAK,IAAKF,gBAAe,KAAM,OAAO,EAAE;QAChE,OAAO,UAAU;MACnB,OAAO,IACL,CAACE,iBAAgB,KAAM,MAAK,IAAKA,iBAAgB,KAAM,OAAO,MAC7DF,gBAAe,KAAM,QAAO,IAAKA,gBAAe,KAAM,SAAQ,IAAKA,gBAAe,KAAM,UAAU,GACnG;QACA,OAAO,YAAY;MACrB,OAAO,IACL,CAACE,iBAAgB,KAAM,QAAO,IAAKA,iBAAgB,KAAM,SAAQ,IAAKA,iBAAgB,KAAM,UAAU,MACrGF,gBAAe,KAAM,MAAK,IAAKA,gBAAe,KAAM,OAAO,GAC5D;QACA,OAAO,aAAa;MACtB,OAAO;QACL,OAAO,EAAE;MACX;IACF;EACF,CAAC;EACDI,iBAAiBA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAChCF,EAAE,CAACF,IAAI,CAACD,iBAAgB,GAAII,IAAI,CAACV,IAAI;IACrCW,IAAI,EAAE;EACR;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}